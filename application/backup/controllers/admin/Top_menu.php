<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Top_menu extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Top_menu_model');
        $this->load->library('form_validation');        
	    $this->load->library('datatables');
    }

    public function index()
    {
        $this->slice->view('admin/top_menu/top_menu_list');
    } 
    
    public function json() {
        header('Content-Type: application/json');
        echo $this->Top_menu_model->json();
    }

    public function read($id) 
    {
        $row = $this->Top_menu_model->get_by_id($id);
        if ($row) {
            $data = array(
    		'id' => $row->id,
    		'title' => $row->title,
    		'url' => $row->url,
	    );
            $this->slice->view('admin/top_menu/top_menu_read', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('admin/top_menu'));
        }
    }

    public function create() 
    {
        $data = array(
            'button' => 'Create',
            'action' => site_url('admin/top_menu/create_action'),
    	    'id' => set_value('id'),
    	    'title' => set_value('title'),
    	    'url' => set_value('url'),
	);
        $this->slice->view('admin/top_menu/top_menu_form', $data);
    }
    
    public function create_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'title' => $this->input->post('title',TRUE),
		'url' => $this->input->post('url',TRUE),
	    );

            $this->Top_menu_model->insert($data);
            $this->session->set_flashdata('message', 'Create Record Success');
            redirect(site_url('admin/top_menu'));
        }
    }
    
    public function update($id) 
    {
        $row = $this->Top_menu_model->get_by_id($id);

        if ($row) {
            $data = array(
                'button' => 'Update',
                'action' => site_url('admin/top_menu/update_action'),
        		'id' => set_value('id', $row->id),
        		'title' => set_value('title', $row->title),
        		'url' => set_value('url', $row->url),
	    );
            $this->slice->view('admin/top_menu/top_menu_form', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('admin/top_menu'));
        }
    }
    
    public function update_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('id', TRUE));
        } else {
            $data = array(
		'title' => $this->input->post('title',TRUE),
		'url' => $this->input->post('url',TRUE),
	    );

            $this->Top_menu_model->update($this->input->post('id', TRUE), $data);
            $this->session->set_flashdata('message', 'Update Record Success');
            redirect(site_url('admin/top_menu'));
        }
    }
    
    public function delete($id) 
    {
        $row = $this->Top_menu_model->get_by_id($id);

        if ($row) {
            $this->Top_menu_model->delete($id);
            $this->session->set_flashdata('message', 'Delete Record Success');
            redirect(site_url('admin/top_menu'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('admin/top_menu'));
        }
    }

    public function _rules() 
    {
	$this->form_validation->set_rules('title', 'title', 'trim|required');
	$this->form_validation->set_rules('url', 'url', 'trim|required');

	$this->form_validation->set_rules('id', 'id', 'trim');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

}

/* End of file Top_menu.php */
/* Location: ./application/controllers/Top_menu.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2018-08-16 10:55:18 */
/* http://harviacode.com */